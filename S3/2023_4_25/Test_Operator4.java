public class Test_Operator4 {
    public static void main(String[]args){
        //位运算符
/*
        Java 中数据存储的最小单位是字节，而数据操作的最小单位是比特位. 字节是最小的存储单位，每个字节是由8个二
        进制比特位组成的，多个字节组合在一起可以表示各种不同的数据。
        位运算符主要有四个: & | ~ ^ ，除 ~ 是一元运算符外，其余都是二元运算符。
        位操作表示 按二进制位运算. 计算机中都是使用二进制来表示数据的(01构成的序列), 按位运算就是在按照二进制位
        的每一位依次进行计算.
*/

        //1. 按位与 &:
        //如果两个二进制位都是 1, 则结果为 1, 否则结果为 0.
/*
        int a = 15;//0000 1111
        int b = 30;//0001 1110
        System.out.println(a & b);//0000 1110 = 14
*/

        //2. 按位或 |:
        //如果两个二进制位都是 0, 则结果为 0, 否则结果为 1.
/*
        int a = 10;//0000 1010
        int b = 20;//0001 0100
        System.out.println(a | b);//0001 1110 = 30
*/
        //当 & 和 | 的操作数为整数(int, short, long, byte) 的时候, 表示按位运算,
        //当操作数为 boolean 的时候,表示逻辑运算.

        //3. 按位取反 ~
        //如果该位为 0 则转为 1, 如果该位为 1 则转为 0
/*
        int a = 0xf;
        System.out.printf("%x\n", ~a);
*/
/*
        0x 前缀的数字为 十六进制 数字. 十六进制可以看成是二进制的简化表示方式.
        一个十六进制数字对应 4个二进制位.
        0xf 表示 10 进制的 15, 也就是二进制的 1111
        printf 能够格式化输出内容, %x 表示按照十六进制输出.
        \n 表示换行符
*/
        //4. 按位异或 ^:
        //如果两个数字的二进制位相同, 则结果为 0, 相异则结果为 1.
/*
        int a = 0x1;
        int b = 0x2;
        System.out.printf("%x\n", a ^ b);
*/
//        !!如果两个数相同，则异或的结果为0


    }
}
